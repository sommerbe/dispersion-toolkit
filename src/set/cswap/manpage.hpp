#pragma once
#include <string>

/* generated by ./script/configure-file.py using template src/set/cswap/manpage.hpp.in
 * with data src/set/cswap/manpage.1.pre. Manual edits will be OVERWRITTEN
 * UNCONDITIONALLY. */

namespace dptk {
std::string manpage
  = R"V0G0N(SET-CSWAP(1)              Dispersion Toolkit Manuals              SET-CSWAP(1)

NAME
       set-cswap - swap coordinates of a given point set

SYNOPSIS
       set-cswap  [--i FILE] [--o FILE] [--count|--c=INTEGER] [--axis=-1|INTE‐
       GER] [--percentage|--p=BINARY64] [--repeat|--r=INTEGER] [--silent]

DESCRIPTION
       Swaps  pairs  of  coordinates  pseudo-randomly  using  an   alternative
       Mersenne Twister, implemented as std::mt19937_64 in the C++11 standard.
       The pairs a chosen based on a uniform integer distribution.

       The axis along to swap may be chosen randomly, using -1, or determinis‐
       tically using INTEGER as values to the argument --axis.

       The stochastic algorithm enables the computation of statistics, for in‐
       stance with respect to dispersion of stochastic point  sets.   To  this
       end, a point set sequence is emitted with --repeat.

       The  resulting  lattice  is  written to standard output, or to the file
       given by --o FILE.

OPTIONS
       --i FILE, --i=FILE
              Retrieves a point set, not a point set sequence, from FILE.  Its
              absence  is substituted by stdin.  The end of a point set, which
              equals the line #eos, starts the algorithm.

       --o FILE, --o=FILE
              Redirects the computed results to FILE, opened in overwrite mode
              (not  appending  mode).   Without FILE, results are forwarded to
              stdout.  Errors encountered during the program’s  execution  are
              streamed into stderr, and not into either stdout or FILE.

       --count=INTEGER, --c=INTEGER, –c INTEGER
              The  algorithm  will  swap INTEGER pairs of coordinates.  By de‐
              fault, INTEGER=1.

       --percentage=BINARY64, --p=BINARY64, –p BINARY64
              The algorithm will swap n pairs of coordinates, with n  =  BINA‐
              RY64 * number of points.

       --axis=-1, --axis=INTEGER, --axis INTEGER
              The  algorithm will swap coordinates along the axis INTEGER.  In
              case INTEGER=-1, the axis is chosen with a uniformly distributed
              pseudo-random number based on std::mt19937_64.

       --repeat=INTEGER, --r=INTEGER, --repeat INTEGER
              A  point set sequence with exactly INTEGER i.i.d.  elements will
              be emitted.  By default, INTEGER=1.

       --delimiter=CHARACTER
              Define a delimiter character to separate coordinates of a  point
              in  the  resulting  output.   A  usual CHARACTER could be ' ' or
              '\t', for instance.

       --silent
              Suppress comments in the output stream, yielding only  the  com‐
              puted value.  The latter could be the point set or its cardinal‐
              ity.

LIMITATION
       The algorithm requires two-dimensional point sets.

AUTHORS
       Benjamin Sommer.

1.1.0                          November 30, 2020                  SET-CSWAP(1)
)V0G0N";
}
